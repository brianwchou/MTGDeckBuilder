{"version":3,"sources":["components/Navbar/Navbar.tsx","components/NoMatch.tsx","common/URLs.ts","actions/SearchActions.ts","containers/Search/Search.tsx","components/Metrics/Line.tsx","components/Metrics/Xaxis.tsx","components/Metrics/Bar.tsx","components/Metrics/Graph.tsx","components/Metrics/Metrics.tsx","containers/DeckList/DeckTypeSelection.tsx","containers/DeckList/DeckListEntry.tsx","containers/DeckList/DeckListEntries.tsx","actions/CardActions.ts","containers/DeckList/DeckList.tsx","components/Card/Card.tsx","containers/SearchCardDisplay/SearchCardDisplay.tsx","containers/MaybeBoardDisplay/MaybeBoardDisplay.tsx","containers/DeckBuilder/DeckBuilder.tsx","containers/App/App.tsx","serviceWorker.ts","reducers/SearchDisplayReducer.ts","reducers/DeckListReducer.ts","reducers/MaybeBoardReducer.ts","reducers/CardCountReducer.ts","reducers/index.ts","index.tsx"],"names":["Navbar","react_default","a","createElement","className","href","NoMatch","react_router_dom","to","filteredSearchURL","listURL","SEARCH","LOAD","getCardSearchData","url","dispatch","fetch","then","response","status","json","console","log","cards","data","filter","info","layout","map","artist","cmc","color_identity","colors","image_uris","mana_cost","name","oracle_text","power","rarity","reserved","setName","toughness","typeLine","type_line","type","loadSearchCards","manaSymbolStyle","maxWidth","maxHeight","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getCards","e","preventDefault","searchCardNameURL","state","textbox","cardType","concat","filterColors","handleCheck","color","target","value","includes","newfilterColors","replace","setState","onSearchTextChange","handleSelect","bind","assertThisInitialized","onSubmit","onChange","onClick","src","alt","style","React","Component","connect","Line","_ref","top","Xaxis","manacurve","Array","fill","cost","key","Bar","height","percent","Graph","metrics","el","i","Metrics_Line","sumOfAll","reduce","acc","count","Metrics_Bar","renderBars","Metrics_Xaxis","metricsStyle","border","width","display","Metrics","main","counts","check","graphInput","j","length","k","newObj","push","sort","b","DeckTypeSelection","DeckListEntry","index","card","getCardInfo","handleOnClick","DeckListEntries","entries","entry","Fragment","CARD_COUNT","INCREMENT","ADD","DECREMENT","REMOVE","DECKLIST","MAYBEBOARD","addToDeckList","cardInfo","getState","deckList","removeFromDeckList","addToMaybe","maybeBoard","decklistStyle","padding","overflow","DeckList","_React$Component","inherits","createClass","buttonType","incrementCardCount","cardCount","decrementCardCount","moveToMaybe","sortedByTypes","cardData","toLowerCase","objectSpread","creatures","toConsumableArray","lands","enchantments","artifacts","planeswalkers","spells","other","Metrics_Metrics","Card","handleOnCLick","draggable","small","buttonDisplay","cardBoxStyle","flexWrap","SearchCardDisplay","_this2","Card_Card_Card","searchDisplay","maybeBoardStyle","MaybeBoardDisplay","deleteFromMaybe","DeckBuilder","containers_Search_Search","containers_SearchCardDisplay_SearchCardDisplay","containers_MaybeBoardDisplay_MaybeBoardDisplay","containers_DeckList_DeckList","App","Navbar_Navbar","basename","react_router","exact","path","component","Boolean","window","location","hostname","match","initialState","combineReducers","arguments","undefined","action","assign","is","defineProperty","keys","result","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b6d1a55.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Navbar.css\"\n\nexport default function Navbar () {\n    return (\n        <nav>\n            <ul className = \"nav\">\n                <li className = \"horizontal\"><a className = \"changeColor\" href=\"/\">Home</a></li>\n            </ul>\n        </nav>\n    )\n}","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nfunction NoMatch () {\n    return (\n        <div>\n            <h1>link does not exist</h1>\n            <Link to = {'/home'}>click to go back to Home page</Link> \n        </div>\n    )\n}\n\nexport default NoMatch","const baseURL = 'https://api.scryfall.com';\nconst searchURL = baseURL + '/cards/named';\nconst listURL = baseURL + '/cards/search';\n\nexport const exactSearchURL = searchURL + '?exact=';\nexport const fuzzySearchURL = searchURL + '?fuzzy=';\nexport const filteredSearchURL = listURL + '?q=';\n\nconst walkingBalista = 'https://img.scryfall.com/cards/small/front/3/2/329a8738-3e17-403a-857a-0ba529ce8cd1.jpg?1543701177';\nconst snapCaster = 'https://img.scryfall.com/cards/small/front/7/e/7e41765e-43fe-461d-baeb-ee30d13d2d93.jpg?1547516526';\nconst urzaTower = 'https://img.scryfall.com/cards/small/en/me4/259a.jpg?1544632409';\nconst urzaPowerPlant = 'https://img.scryfall.com/cards/small/en/me4/258a.jpg?1544632161';\nconst urzaMine = 'https://img.scryfall.com/cards/small/en/me4/257d.jpg?1544632039';\nconst condescend = 'https://img.scryfall.com/cards/small/en/ima/46.jpg?1530591830'; \nconst thirstForKnowledge = 'https://img.scryfall.com/cards/small/en/c18/106.jpg?1535503409';\nconst thoughtKnotSeer = 'https://img.scryfall.com/cards/small/en/ogw/9.jpg?1517813031';\nconst treasureMage = 'https://img.scryfall.com/cards/small/en/ddu/40.jpg?1523060985';\nconst trinketMage = 'https://img.scryfall.com/cards/small/en/ddu/41.jpg?1523060999';\nconst wormCoilEngine = 'https://img.scryfall.com/cards/small/en/cm2/231.jpg?1534113193';\nconst sunderingTitan = 'https://img.scryfall.com/cards/small/en/a25/233.jpg?1521726236';\nconst ugin = 'https://img.scryfall.com/cards/small/en/frf/1.jpg?1517813031';\nconst repeal = 'https://img.scryfall.com/cards/small/en/ima/70.jpg?1530591972';\nconst remand = 'https://img.scryfall.com/cards/small/en/mm2/55.jpg?1517813031';\nconst chaliceOfTheVoid  = 'https://img.scryfall.com/cards/small/en/a25/222.jpg?1521725918';\nconst cyclonicRift = 'https://img.scryfall.com/cards/small/en/mm3/35.jpg?1517813031';\nconst expeditionMap = 'https://img.scryfall.com/cards/small/en/mm2/213.jpg?1517813031';\nconst engineeredExplosives = 'https://img.scryfall.com/cards/small/front/f/1/f1e2b69e-b06b-46a5-ac57-a6a180eeecc7.jpg?1547518428';\nconst talismanOfDominence = 'https://img.scryfall.com/cards/small/en/e01/90.jpg?1517813031';\nconst talismanOfProgress = 'https://img.scryfall.com/cards/small/en/td2/26.jpg?1517813031';\nconst oblivionStone = 'https://img.scryfall.com/cards/small/en/cm2/205.jpg?1534112917';\nconst mindSlaver = 'https://img.scryfall.com/cards/small/en/som/176.jpg?1517813031';\nconst academyRuins = 'https://img.scryfall.com/cards/small/en/mma/219.jpg?1517813031';\nconst gemStoneCaverns = 'https://img.scryfall.com/cards/small/en/tsp/274.jpg?1517813031';\nconst island = 'https://img.scryfall.com/cards/small/front/a/c/ac28037a-461b-4fb3-9feb-d3eb739da995.jpg?1551119362';\nconst tetonicEdge = 'https://img.scryfall.com/cards/small/en/c14/313.jpg?1530679235';\nconst tolariaWest = 'https://img.scryfall.com/cards/small/en/fut/173.jpg?1530718954';\nconst oboroPalaceInTheClouds = 'https://img.scryfall.com/cards/small/en/sok/164.jpg?1517813031';\nconst fieldOfRuin = 'https://img.scryfall.com/cards/small/en/xln/254.jpg?1527431443';\n\nexport const blueTron = [\n                            [walkingBalista, \n                            snapCaster,\n                            thoughtKnotSeer,\n                            thoughtKnotSeer,\n                            trinketMage,\n                            treasureMage,\n                            wormCoilEngine,\n                            sunderingTitan,],\n                            [ugin,],\n                            [condescend,\n                            condescend,\n                            condescend,\n                            condescend,\n                            repeal,\n                            repeal,\n                            cyclonicRift,\n                            remand,\n                            remand,\n                            remand,\n                            thirstForKnowledge,\n                            thirstForKnowledge,\n                            thirstForKnowledge,\n                            thirstForKnowledge,],\n                            [chaliceOfTheVoid,\n                            chaliceOfTheVoid,\n                            chaliceOfTheVoid,\n                            engineeredExplosives,\n                            expeditionMap,\n                            expeditionMap,\n                            expeditionMap,\n                            expeditionMap,\n                            talismanOfDominence,\n                            talismanOfProgress,\n                            oblivionStone,\n                            mindSlaver,\n                            mindSlaver,],\n                            [academyRuins,\n                            fieldOfRuin,\n                            gemStoneCaverns,\n                            island,\n                            island,\n                            island,\n                            island,\n                            island,\n                            island,\n                            oboroPalaceInTheClouds,\n                            tetonicEdge,\n                            tolariaWest,\n                            urzaMine, \n                            urzaMine, \n                            urzaMine, \n                            urzaMine, \n                            urzaPowerPlant, \n                            urzaPowerPlant, \n                            urzaPowerPlant, \n                            urzaPowerPlant, \n                            urzaTower,\n                            urzaTower,\n                            urzaTower,\n                            urzaTower,]\n                        ]","import { CardInfo } from '../common/types';\n\n/*\n    action types\n*/\nexport const SEARCH = {\n  LOAD: 'SEARCH_LOAD_CARDS'\n}\n\n/*\n    action creators\n*/\nexport const loadSearchCards = (cards: Array<CardInfo>) => {\n    return {\n      type: SEARCH.LOAD,\n      cards\n    }\n  }\n\n/*\n    thunks\n*/\nexport const getCardSearchData = (url: string) => {\n    return (dispatch: any) => {\n      fetch(url)\n        .then(response => {\n            if (response.status === 200) {\n                return response.json();\n            } else {\n                console.log(\"response\", response.status)\n                return null;\n            }\n        })\n        .then((json) => {\n          if (json) {\n            var cards = json.data.filter((info: any) => {\n              return info.layout === \"normal\"\n            })\n            .map((info: any) => {\n                return {\n                  artist: info.artist,\n                  cmc: info.cmc,\n                  color_identity: info.color_identity,\n                  colors: info.colors,\n                  image_uris: info.image_uris,\n                  mana_cost: info.mana_cost,\n                  name: info.name,\n                  oracle_text: info.oracle_text,\n                  power: info.power,\n                  rarity: info.rarity,\n                  reserved: info.reserved,\n                  setName: info.setName,\n                  toughness: info.toughness,\n                  typeLine: info.type_line,\n                }\n            })\n            console.log(cards)\n            dispatch(loadSearchCards(cards));\n          }\n        });\n      }\n  }","import React, {  Dispatch } from 'react'\nimport { connect } from 'react-redux';\nimport { filteredSearchURL } from '../../common/URLs';\nimport { getCardSearchData } from '../../actions/SearchActions';\nimport './Search.css';\n\nconst manaSymbolStyle = {\n    maxWidth: \"15px\",\n    maxHeight: \"15px\",\n}\n\ntype SearchState = {\n    textbox: string,\n    filterColors: string,\n    cardType: string\n}\n\ntype SearchProps = {\n    dispatch: Dispatch<any>\n}\n\nclass Search extends React.Component<SearchProps, SearchState> {\n    constructor(props: SearchProps) {\n        super(props);\n        this.state = {\n            textbox: \"\",\n            filterColors: \"\",\n            cardType: \"\",\n        }\n        this.getCards = this.getCards.bind(this);\n    }\n\n    getCards = (e: any) => {\n      e.preventDefault();\n      var searchCardNameURL: string = filteredSearchURL + this.state.textbox\n    \n      searchCardNameURL += (this.state.cardType) ? `+t:${this.state.cardType}` : \"\"\n\n      searchCardNameURL += (this.state.filterColors) ? `+c:${this.state.filterColors}` : \"\"\n\n      searchCardNameURL += \"&unique\";\n\n      this.props.dispatch(getCardSearchData(searchCardNameURL));\n    }\n\n    handleCheck = (e: any) => {\n        let color = e.target.value\n        let { filterColors } = this.state\n        \n        if (filterColors.includes(color)) {\n            let newfilterColors = filterColors.replace(color, \"\")\n            this.setState({ filterColors: newfilterColors })\n        } else {\n            this.setState({ filterColors: filterColors.concat(e.target.value) })\n        }\n    }\n\n    onSearchTextChange = (e: any) => {\n        this.setState({ textbox: e.target.value })\n    }\n\n    handleSelect = (e: any) => {\n        this.setState({ cardType: e.target.value })\n    }\n\n    render() {\n      return (\n        <form onSubmit={this.getCards}>\n          <input className=\"field\" type=\"text\" onChange={this.onSearchTextChange}/>\n          <button className=\"submitbutton\" type=\"submit\"> submit </button>\n          <br/>\n\n          <input type=\"checkbox\" onClick={this.handleCheck} value=\"w\"></input> \n          <img src=\"https://gamepedia.cursecdn.com/mtgsalvation_gamepedia/8/8e/W.svg\" alt=\"white_mana\" style={manaSymbolStyle}/> &nbsp;\n\n          <input type=\"checkbox\" onClick={this.handleCheck} value=\"u\"></input>\n          <img src=\"https://gamepedia.cursecdn.com/mtgsalvation_gamepedia/9/9f/U.svg\" alt=\"blue_mana\" style={manaSymbolStyle}/> &nbsp;\n          \n          <input type=\"checkbox\" onClick={this.handleCheck} value=\"b\"></input>\n          <img src=\"https://gamepedia.cursecdn.com/mtgsalvation_gamepedia/2/2f/B.svg\" alt=\"black_mana\" style={manaSymbolStyle}/> &nbsp;\n          \n          <input type=\"checkbox\" onClick={this.handleCheck} value=\"r\"></input>\n          <img src=\"https://gamepedia.cursecdn.com/mtgsalvation_gamepedia/8/87/R.svg\" alt=\"red_mana\" style={manaSymbolStyle}/> &nbsp;\n          \n          <input type=\"checkbox\" onClick={this.handleCheck} value=\"g\"></input>\n          <img src=\"https://gamepedia.cursecdn.com/mtgsalvation_gamepedia/8/88/G.svg\" alt=\"green_mana\" style={manaSymbolStyle}/> &nbsp;\n\n          <select onChange={this.handleSelect}>\n              <option value=\"\">Choose A Card Type</option>\n              <option value=\"artifact\">Artifact</option>\n              <option value=\"creature\">Creature</option>\n              <option value=\"enchantment\">Enchantment</option>\n              <option value=\"instant\">Instant</option>\n              <option value=\"sorcery\">Sorcery</option>\n              <option value=\"planeswalker\">Planeswalker</option>\n              <option value=\"land\">Land</option>\n          </select>\n\n        </form>\n      )\n    }\n}\n\nexport default connect()(Search)","import React from 'react'\nimport './graphs.css'\n\ntype LineProps = {\n    top: number,\n    key: number\n}\n\nconst Line = ({ top }: LineProps) => \n    <div className=\"line\" style={{ top: `${top}%` }} />\n\nexport default Line","import React from 'react'\n\ninterface CMCMetric {\n    cmc: number,\n    count: number\n}\n\ntype XaxisProps = {\n    manacurve: Array<CMCMetric>\n}\n\nconst Xaxis = ({ manacurve }: XaxisProps) => {\n  Array(11).fill(null);\n\n  return (\n    <div className=\"xaxis\">\n      {\n        manacurve.map((cost) => (\n          <div className=\"label\" key={cost.cmc}>\n            {cost.cmc}\n          </div>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Xaxis","import React from 'react'\n\ntype BarProps = {\n    percent: number\n}\n\nconst Bar = (props: BarProps) => \n    <div className=\"bar\" style={{ height: `${props.percent}%`}} />\n\nexport default Bar","import React from 'react'\nimport './graphs.css'\nimport Line from './Line'\nimport Xaxis from './Xaxis'\nimport Bar from './Bar'\n\ninterface CMCMetric {\n    cmc: number,\n    count: number\n}\n\ntype GraphProps = {\n    metrics: Array<CMCMetric>\n}\n\nexport default function Graph({metrics}: GraphProps) {\n    // this sets up the horizontal lines\n    const renderLines= () => {\n        return Array(10).fill(null).map((el, i) => (\n            <Line\n                top={i * 10}\n                key={i}\n            />\n        ))\n    }\n\n    // sets up the vertical bars\n    const renderBars = () => {\n        let sumOfAll = metrics.reduce((acc: number, cost: CMCMetric) => {\n            return acc + cost.count;\n        }, 0);\n\n        return metrics.map((cost) => {\n            const percent = (cost.count / sumOfAll) * 100;\n            return (\n                <Bar\n                    percent={percent}\n                    key={cost.cmc}\n                />\n            )\n        })\n    }\n\n    return (\n        <div className=\"graph-wrapper\">\n            <div className=\"graph\">\n                <div className=\"bar-lines-container\">\n                    {renderLines()}\n                    {renderBars()}\n                </div>\n                <Xaxis manacurve={metrics} />\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport Graph from './Graph'\nimport { CardInfo } from '../../common/types';\n\nconst metricsStyle = {\n    border: 'solid black thin',\n    width: '35vw',\n    height: '30vh',\n    display: 'inline-block'\n}\n\ninterface CardCount {\n    [index: string]: number\n}\n\ntype MetricsProps = {\n    main: Array<CardInfo>,\n    counts: CardCount\n}\n\ninterface CMCMetric {\n    cmc: number,\n    count: number\n}\n\nfunction Metrics ({ main, counts }: MetricsProps) {\n\n    const check = (main: Array<CardInfo>, i: number, graphInput: Array<CMCMetric>): boolean => {\n        for (let j = 0; j < graphInput.length; j++) {\n            if (main[i].cmc === graphInput[j].cmc) {\n                return true\n            }\n        }\n        return false\n    }\n\n    const metrics = (main: Array<CardInfo>, counts: CardCount): Array<CMCMetric>=> {\n        var graphInput: Array<CMCMetric> = [];\n\n        for (let i = 0; i < main.length; i++) {\n            if (!check(main, i, graphInput)) {\n                var newObj = {\n                    cmc: main[i].cmc,\n                    count: counts[main[i].name]\n                }\n                graphInput.push(newObj)\n            }\n\n            else {\n                for (let k = 0; k < graphInput.length; k++) {\n                    if (main[i].cmc === graphInput[k].cmc) {\n                        graphInput[k].count += counts[main[i].name]\n                    }\n                }\n            }\n        }\n        return graphInput.sort((a, b) => a.cmc - b.cmc);\n    }\n\n    return (\n        <div style={metricsStyle}>\n            <Graph metrics={metrics(main, counts)} />\n        </div>\n    )\n}\n\nexport default Metrics","import React from 'react'\n\nexport default function DeckTypeSelection() {\n    return (\n        <select>\n            <option value=\"standard\">Standard</option>\n            <option value=\"modern\">Modern</option>\n            <option value=\"legacy\">Legacy</option>\n            <option value=\"vintage\">Vintage</option>\n            <option value=\"commander\">Commander</option>\n            <option value=\"other\">Other</option>\n        </select>\n    )\n} \n","import React from 'react';\nimport { CardInfo } from '../../common/types';\n\ntype DeckListEntryProps = {\n    index: number,\n    card: CardInfo,\n    count: number,\n    getCardInfo(card: CardInfo, name: string): void   \n}\n\nexport default function DeckListEntry ({index, card, count, getCardInfo}: DeckListEntryProps) {\n    const handleOnClick = (e: any) => {\n        getCardInfo(card, e.target.name);\n    }\n\n    return (\n        <div className=\"flex alignment\" key={index}> \n            <div className=\"flex count\">\n                {count}x \n                <button onClick={handleOnClick} name={'increment'}>+</button>\n            </div>\n            <div className=\"flex name\">\n                {card.name} \n                <button onClick={handleOnClick} name={'decrement'}>-</button>\n                <button onClick={handleOnClick} name={'maybe'}>maybe</button>\n            </div>        \n        </div>\n    )\n}","import React from 'react'\nimport DeckListEntry from './DeckListEntry'\nimport { CardInfo } from '../../common/types';\n\ninterface CardCount {\n    [index: string]: number\n}\n\ntype DeckListEntriesProps = {\n    data: Array<CardInfo>,\n    type: string,\n    counts: CardCount,\n    getCardInfo(card: CardInfo, name: string): void,\n}\n\nexport default function DeckListEntries({data, type, counts, getCardInfo}: DeckListEntriesProps) {\n    let entries = data.map((entry: CardInfo, index: number)=> {\n        return <DeckListEntry index={index} card={entry} getCardInfo={getCardInfo} count={counts[entry.name]} />\n    }) \n    return (entries.length) ? (\n        <>\n            <div className=\"type_padding\">{type}</div>\n            <div>\n                {entries}\n            </div>\n        </>\n    ) : null;\n}\n","import { CardInfo } from '../common/types';\nimport { Dispatch, Reducer } from 'react';\nimport { AnyAction, Middleware } from 'redux';\n\n\nexport const CARD_COUNT = {\n    INCREMENT: 'CARD_COUNT_INCREMENT',\n    ADD: 'CARD_COUNT_ADD',\n    DECREMENT: 'CARD_COUNT_DECREMENT',\n    REMOVE: 'CARD_COUNT_REMOVE'\n}\n\nexport const DECKLIST = {\n    ADD: 'DECKLIST_ADD',\n    REMOVE: 'DECKLIST_REMOVE',\n}\n\nexport const MAYBEBOARD = {\n    ADD: \"MAYBEBOARD_ADD\",\n    REMOVE: \"MAYBEBOARD_REMOVE\",\n}\n\nexport const addToDeckList = (cardInfo: CardInfo) => {\n    return (dispatch: Dispatch<AnyAction>, getState: any) => {\n        const state = getState();\n        if (state.deckList.main.includes(cardInfo)) {\n            dispatch({\n                type: CARD_COUNT.INCREMENT, \n                name: cardInfo.name\n            })\n        } else {\n            dispatch({\n                type: DECKLIST.ADD, \n                card: cardInfo\n            });\n            dispatch({\n                type: CARD_COUNT.ADD, \n                name: cardInfo.name\n            })\n        }\n    }\n}\n\nexport const removeFromDeckList = (cardInfo: CardInfo) => {\n    return (dispatch: Dispatch<AnyAction>) => {\n            dispatch({\n                type: DECKLIST.REMOVE, \n                card: cardInfo\n             });\n            dispatch({\n                type: CARD_COUNT.REMOVE, \n                name: cardInfo.name\n            })\n    }\n}\n\nexport const moveToMaybe = (cardInfo: CardInfo) => {\n    return (dispatch: Dispatch<Reducer<any, AnyAction>>) => {\n        dispatch(addToMaybe(cardInfo))\n        dispatch(removeFromDeckList(cardInfo))\n    }\n}\n\n// card count actions\nexport const incrementCardCount = (cardInfo: CardInfo) => {\n    return {\n        type: CARD_COUNT.INCREMENT, \n        name: cardInfo.name\n    }\n}\n\nexport const decrementCardCount = (cardInfo: CardInfo) => {\n    return (dispatch: any, getState: any) => {   \n        const state = getState();\n        if (state.cardCount.counts[cardInfo.name] === 1) {\n            dispatch(removeFromDeckList(cardInfo));\n        } else {\n            dispatch({type: CARD_COUNT.DECREMENT, name: cardInfo.name});\n        }\n    }\n}\n\nexport const addToMaybe = (cardInfo: CardInfo) => {\n    return (dispatch: Dispatch<AnyAction>, getState: any) => {\n        const state = getState();\n        if (!state.maybeBoard.cards.includes(cardInfo)) {\n            dispatch({type: MAYBEBOARD.ADD, card: cardInfo});\n        }\n    }\n}\n\nexport const deleteFromMaybe = (cardInfo: CardInfo) => {\n    return {\n        type: MAYBEBOARD.REMOVE,\n        card: cardInfo\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport Metrics from '../../components/Metrics';\nimport DeckTypeSelection from '../DeckList/DeckTypeSelection';\nimport DeckListEntries from '../DeckList/DeckListEntries';\nimport {incrementCardCount, decrementCardCount, moveToMaybe} from '../../actions/CardActions';\nimport './DeckList.css'\n\nexport const mapStateToProps = (state) => {\n    return {\n        main: state.deckList.main,\n        counts: state.cardCount.counts\n    }\n}\n\nexport const organizeCards = (cards) => {\n    return cards.reduce((sortedByTypes, cardData) => {\n        if (cardData.typeLine.toLowerCase().includes('creature')) {\n            return {...sortedByTypes, creatures: [...sortedByTypes.creatures, cardData]}\n        } else if (cardData.typeLine.toLowerCase().includes('land')) {\n            return {...sortedByTypes, lands: [...sortedByTypes.lands, cardData]} \n        } else if (cardData.typeLine.toLowerCase().includes('enchantment')) {\n            return {...sortedByTypes, enchantments: [...sortedByTypes.enchantments, cardData]}\n        } else if (cardData.typeLine.toLowerCase().includes('artifact')) {\n            return {...sortedByTypes, artifacts: [...sortedByTypes.artifacts, cardData]}\n        } else if (cardData.typeLine.toLowerCase().includes('planeswalker')) {\n            return {...sortedByTypes, planeswalkers: [...sortedByTypes.planeswalkers, cardData]}\n        } else if (cardData.typeLine.toLowerCase().includes('sorcery')) {\n            return {...sortedByTypes, spells: [...sortedByTypes.spells, cardData]}\n        } else if (cardData.typeLine.toLowerCase().includes('instant')) {\n            return {...sortedByTypes, spells: [...sortedByTypes.spells, cardData]}\n        } else {\n            return {...sortedByTypes, other: [...sortedByTypes.other, cardData]}\n        }\n    }, {\n        artifacts: [],\n        enchantments: [],\n        spells: [],\n        planeswalkers: [],\n        lands: [],\n        creatures: [],\n        other: []\n    })\n}\n\nconst decklistStyle = {\n    border: 'solid black thin',\n    width: '35vw',\n    height: '50vh',\n    padding: '15px',\n    overflow: 'scroll',\n}\n\n//container\nexport class DeckList extends React.Component {\n    constructor() {\n        super();\n        this.getCardInfo = this.getCardInfo.bind(this);\n    }\n\n    getCardInfo(cardInfo, buttonType) {\n        if (buttonType === 'increment') {\n            this.props.dispatch(incrementCardCount(cardInfo));\n        } else if (buttonType === 'decrement') {\n            this.props.dispatch(decrementCardCount(cardInfo));\n        } else if (buttonType === 'maybe') {\n            this.props.dispatch(moveToMaybe(cardInfo));\n        }\n    }\n\n    render() {\n        // expecting deck lists sort data here?\n        const sortedByTypes = organizeCards(this.props.main)\n\n        return (\n            <div>\n                <div style={decklistStyle}>\n                    <div><b> DECK TITLE </b></div>\n                        <DeckTypeSelection />\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Creatures\"} data={sortedByTypes.creatures} counts={this.props.counts}/>\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Spells\"} data={sortedByTypes.spells} counts={this.props.counts} />\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Enchantments\"} data={sortedByTypes.enchantments} counts={this.props.counts}/>\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Artifacts\"} data={sortedByTypes.artifacts} counts={this.props.counts}/>\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Planeswalkers\"} data={sortedByTypes.planeswalkers} counts={this.props.counts}/>\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Lands\"} data={sortedByTypes.lands} counts={this.props.counts}/>\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Other *debugging*\"} data={sortedByTypes.other} counts={this.props.counts}/>\n                </div>\n                <Metrics main={this.props.main} counts={this.props.counts}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(DeckList);","import React, { Component } from 'react';\nimport './Card.css';\nimport { CardInfo } from '../../common/types';\n\nexport type CardProps = {\n    info: CardInfo,\n    buttonDisplay: string,\n    getCardInfo(info: CardInfo, name: string): void\n}\n\nexport default class Card extends Component<CardProps> {\n    constructor(props: CardProps) {\n      super(props);\n\n      this.handleOnCLick = this.handleOnCLick.bind(this)\n    }\n\n    handleOnCLick(e: any) {\n        this.props.getCardInfo(this.props.info, e.target.name);\n    }\n    \n    render() {\n        let {info} = this.props; \n\n        return (\n            <div className=\"container\">\n                <img draggable={false}\n                    src={info.image_uris.small}\n                    alt={info.name}\n                />\n                <button className=\"btn\" name=\"add\" onClick={this.handleOnCLick}>Add To Decklist</button>\n                <button className=\"btn2\" name=\"other\" onClick={this.handleOnCLick}>{this.props.buttonDisplay}</button>\n            </div>\n        )\n    }   \n  }\n\n  ","import React from 'react';\nimport Card from '../../components/Card';\nimport { connect } from 'react-redux';\nimport {addToDeckList, addToMaybe} from '../../actions/CardActions';\n\nexport const mapStateToProps = (state) => {\n    return {\n        cards: state.searchDisplay.cards,\n        counts: state.deckList.cardCount\n    }\n}\n\nconst cardBoxStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    border: 'solid black thin',\n    width: '63vw',\n    height: '50vh',\n    overflow: 'scroll',\n}\n\n\nexport class SearchCardDisplay extends React.Component {\n    constructor() {\n        super();\n\n        this.getCardInfo = this.getCardInfo.bind(this);\n    }\n\n\n    getCardInfo(cardInfo, buttonType) {\n        if (buttonType === \"add\") {\n            this.props.dispatch(addToDeckList(cardInfo));\n        } else if (buttonType === \"other\") {\n            this.props.dispatch(addToMaybe(cardInfo));\n        }\n    }\n\n    render() {\n        const cards  = this.props.cards.map((info, index) => {\n            return <Card info={info} getCardInfo={this.getCardInfo} buttonDisplay={'Add to MaybeBoard'} key={index} />\n        });\n\n        return (\n            <div style={cardBoxStyle}>\n                {cards}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(SearchCardDisplay)","import React from 'react';\nimport Card from '../../components/Card';\nimport { connect } from 'react-redux';\nimport {addToDeckList, deleteFromMaybe} from '../../actions/CardActions';\n\nexport const mapStateToProps = (state) => {\n    return {\n        cards: state.maybeBoard.cards\n    }\n}\n\nconst maybeBoardStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    border: 'solid black thin',\n    width: '63vw',\n    height: '28vh',\n    overflow: 'scroll',\n}\n\nexport class MaybeBoardDisplay extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.getCardInfo = this.getCardInfo.bind(this);\n    }\n\n    getCardInfo(cardInfo, buttonType) {\n        if (buttonType === \"add\") {\n            this.props.dispatch(addToDeckList(cardInfo));\n        } else if (buttonType === \"other\") {\n            this.props.dispatch(deleteFromMaybe(cardInfo));\n        }\n    }\n\n    render() {\n        const cards = this.props.cards.map((info, index) => {\n            return <Card info={info} key={index} getCardInfo={this.getCardInfo} buttonDisplay={'Delete'} />\n        })\n\n        return(\n            <div style={maybeBoardStyle}>\n                {cards}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(MaybeBoardDisplay)","import React from 'react';\nimport Search from '../../containers/Search';\nimport DeckList from '../../containers/DeckList/DeckList';\nimport SearchCardDisplay from '../../containers/SearchCardDisplay/SearchCardDisplay';\nimport MaybeBoardDisplay from '../../containers/MaybeBoardDisplay/MaybeBoardDisplay';\nimport './DeckBuilder.css';\n\nexport default class DeckBuilder extends React.Component {\n  render() {\n    return (\n      <div>\n        <Search />\n        <div className=\"flexboxes\">\n          <div className=\"column\">\n          <SearchCardDisplay />\n          <MaybeBoardDisplay />\n          </div>\n          <div className=\"column\">\n            <DeckList />\n          </div>\n        </div>\n        <img className=\"background\" src=\"https://cdn.arstechnica.net/wp-content/uploads/2016/01/159984_CN-980x597.jpg\" alt=\"default\"/>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Navbar from '../../components/Navbar'\nimport NoMatch from '../../components/NoMatch';\nimport DeckBuilder from '../../containers/DeckBuilder';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <BrowserRouter basename=\"/deck-builder-web/\">\n            <Switch>\n                <Route exact path=\"/\" component={DeckBuilder} />\n                <Route component={NoMatch} />\n            </Switch>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SEARCH } from '../actions/SearchActions';\nconst initialState = { cards: [] };\n\nexport default function searchDisplay(state=initialState, action) {\n    switch(action.type) {\n        case SEARCH.LOAD:\n            return Object.assign({}, state, {\n                cards: action.cards\n            });\n        default:\n            return state;\n    }\n}\n","import { DECKLIST } from '../actions/CardActions';\nconst initialState = { main: [] };\n\nexport default function deckList(state=initialState, action){\n    switch(action.type) {\n        case DECKLIST.ADD:\n            return Object.assign({}, state, {\n                main: [...state.main, action.card]\n            })\n        case DECKLIST.REMOVE:\n            return Object.assign({}, state, {\n                main: state.main.filter((card) => {\n                    return !Object.is(card, action.card)\n                })\n            })\n        default:\n            return state;\n    }\n}","import { MAYBEBOARD } from '../actions/CardActions';\nconst initialState = { cards: [] };\n\nexport default function maybeBoard(state=initialState, action) {\n    switch(action.type) {\n        case MAYBEBOARD.ADD:\n            return Object.assign({}, state, {\n                cards: [...state.cards, action.card]\n            })\n        case MAYBEBOARD.REMOVE:\n            return Object.assign({}, state, {\n                cards: state.cards.filter((card) => {\n                    return !Object.is(card, action.card);\n                })\n            })\n        default:\n            return state;\n    }\n}","import { CARD_COUNT } from '../actions/CardActions'\nconst initialState = { counts: {} };\n\nexport default function cardCount(state=initialState, action) {\n    switch(action.type) {\n        case CARD_COUNT.ADD:\n            return Object.assign({}, state, {\n                counts: Object.assign({}, state.counts, {\n                    [action.name]: 1\n                })\n            });\n        case CARD_COUNT.INCREMENT:\n            return Object.assign({}, state, {\n                counts: Object.assign({}, state.counts, {\n                    [action.name]: (state.counts[action.name]) ? state.counts[action.name] + 1 : 1\n                })\n        });\n        case CARD_COUNT.DECREMENT:\n            return Object.assign({}, state, {\n                counts: Object.assign({}, state.counts, {\n                    [action.name]: state.counts[action.name] - 1\n                })\n            });\n        case CARD_COUNT.REMOVE:\n            return Object.assign({}, state, {\n                counts: Object.keys(state.counts).reduce((result, name) => {\n                    if (name !== action.name) {\n                        result[name] = state.counts[name];\n                    }\n                    return result\n                }, {})\n            });\n        default: \n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport searchDisplay from '../reducers/SearchDisplayReducer';\nimport deckList from '../reducers/DeckListReducer';\nimport maybeBoard from '../reducers/MaybeBoardReducer';\nimport cardCount from '../reducers/CardCountReducer';\n\nexport default combineReducers({\n    searchDisplay,\n    deckList,\n    cardCount,\n    maybeBoard,\n});\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\nimport rootReducer from './reducers'\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Navbar/Navbar.tsx","components/NoMatch.tsx","common/URLs.ts","actions/SearchActions.ts","components/Error/Error.tsx","containers/Search/Search.tsx","components/Metrics/Line.tsx","components/Metrics/Xaxis.tsx","components/Metrics/Bar.tsx","components/Metrics/Graph.tsx","components/Metrics/Metrics.tsx","containers/DeckList/DeckTypeSelection.tsx","containers/DeckList/DeckListEntry.tsx","containers/DeckList/DeckListEntries.tsx","actions/CardActions.ts","containers/DeckList/DeckList.tsx","components/Card/Card.tsx","containers/SearchCardDisplay/SearchCardDisplay.tsx","containers/MaybeBoardDisplay/MaybeBoardDisplay.tsx","containers/DeckBuilder/DeckBuilder.tsx","containers/App/App.tsx","serviceWorker.ts","reducers/SearchDisplayReducer.ts","reducers/DeckListReducer.ts","reducers/MaybeBoardReducer.ts","reducers/CardCountReducer.ts","reducers/index.ts","index.tsx"],"names":["Navbar","react_default","a","createElement","className","href","NoMatch","react_router_dom","to","filteredSearchURL","listURL","SEARCH","LOAD","ERROR","getCardSearchData","url","dispatch","fetch","then","response","status","json","console","log","type","cards","data","filter","info","layout","map","artist","cmc","color_identity","colors","image_uris","mana_cost","name","oracle_text","power","rarity","reserved","setName","toughness","typeLine","type_line","error","loadSearchCards","errorStyle","color","Error","_ref","errorMessage","style","manaSymbolStyle","maxWidth","maxHeight","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getCards","event","preventDefault","searchCardNameURL","state","textbox","cardType","concat","filterColors","handleCheck","e","target","value","includes","newfilterColors","replace","setState","onSearchTextChange","handleSelect","bind","assertThisInitialized","onSubmit","onChange","Error_Error","src","alt","React","Component","connect","searchDisplay","Line","top","Xaxis","manacurve","Array","fill","cost","key","Bar","height","percent","Graph","metrics","el","i","Metrics_Line","sumOfAll","reduce","acc","count","Metrics_Bar","renderBars","Metrics_Xaxis","metricsStyle","border","width","display","Metrics","main","counts","check","graphInput","j","length","k","newObj","push","sort","b","DeckTypeSelection","DeckListEntry","index","card","getCardInfo","handleOnClick","onClick","DeckListEntries","entries","entry","Fragment","CARD_COUNT","INCREMENT","ADD","DECREMENT","REMOVE","DECKLIST","MAYBEBOARD","addToDeckList","cardInfo","getState","deckList","removeFromDeckList","addToMaybe","maybeBoard","decklistStyle","padding","overflow","DeckList","_React$Component","inherits","createClass","buttonType","incrementCardCount","cardCount","decrementCardCount","moveToMaybe","sortedByTypes","cardData","toLowerCase","objectSpread","creatures","toConsumableArray","lands","enchantments","artifacts","planeswalkers","spells","other","Metrics_Metrics","Card","handleOnCLick","draggable","small","buttonDisplay","cardBoxStyle","flexWrap","Card_Card_Card","maybeBoardStyle","MaybeBoardDisplay","deleteFromMaybe","_this2","DeckBuilder","containers_Search_Search","containers_SearchCardDisplay_SearchCardDisplay","containers_MaybeBoardDisplay_MaybeBoardDisplay","containers_DeckList_DeckList","App","Navbar_Navbar","basename","react_router","path","exact","component","Boolean","window","location","hostname","match","initialState","combineReducers","arguments","undefined","action","assign","is","defineProperty","keys","result","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5548a01.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Navbar.css\"\n\nexport default function Navbar () {\n    return (\n        <nav>\n            <ul className = \"nav\">\n                <li className = \"horizontal\"><a className = \"changeColor\" href=\"Home\">Home</a></li>\n            </ul>\n        </nav>\n    )\n}","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nfunction NoMatch () {\n    return (\n        <div>\n            <h1>link does not exist</h1>\n            <Link to = {'/home'}>click to go back to Home page</Link> \n        </div>\n    )\n}\n\nexport default NoMatch","const baseURL = 'https://api.scryfall.com';\nconst searchURL = baseURL + '/cards/named';\nconst listURL = baseURL + '/cards/search';\n\nexport const exactSearchURL = searchURL + '?exact=';\nexport const fuzzySearchURL = searchURL + '?fuzzy=';\nexport const filteredSearchURL = listURL + '?q=';\n\nconst walkingBalista = 'https://img.scryfall.com/cards/small/front/3/2/329a8738-3e17-403a-857a-0ba529ce8cd1.jpg?1543701177';\nconst snapCaster = 'https://img.scryfall.com/cards/small/front/7/e/7e41765e-43fe-461d-baeb-ee30d13d2d93.jpg?1547516526';\nconst urzaTower = 'https://img.scryfall.com/cards/small/en/me4/259a.jpg?1544632409';\nconst urzaPowerPlant = 'https://img.scryfall.com/cards/small/en/me4/258a.jpg?1544632161';\nconst urzaMine = 'https://img.scryfall.com/cards/small/en/me4/257d.jpg?1544632039';\nconst condescend = 'https://img.scryfall.com/cards/small/en/ima/46.jpg?1530591830'; \nconst thirstForKnowledge = 'https://img.scryfall.com/cards/small/en/c18/106.jpg?1535503409';\nconst thoughtKnotSeer = 'https://img.scryfall.com/cards/small/en/ogw/9.jpg?1517813031';\nconst treasureMage = 'https://img.scryfall.com/cards/small/en/ddu/40.jpg?1523060985';\nconst trinketMage = 'https://img.scryfall.com/cards/small/en/ddu/41.jpg?1523060999';\nconst wormCoilEngine = 'https://img.scryfall.com/cards/small/en/cm2/231.jpg?1534113193';\nconst sunderingTitan = 'https://img.scryfall.com/cards/small/en/a25/233.jpg?1521726236';\nconst ugin = 'https://img.scryfall.com/cards/small/en/frf/1.jpg?1517813031';\nconst repeal = 'https://img.scryfall.com/cards/small/en/ima/70.jpg?1530591972';\nconst remand = 'https://img.scryfall.com/cards/small/en/mm2/55.jpg?1517813031';\nconst chaliceOfTheVoid  = 'https://img.scryfall.com/cards/small/en/a25/222.jpg?1521725918';\nconst cyclonicRift = 'https://img.scryfall.com/cards/small/en/mm3/35.jpg?1517813031';\nconst expeditionMap = 'https://img.scryfall.com/cards/small/en/mm2/213.jpg?1517813031';\nconst engineeredExplosives = 'https://img.scryfall.com/cards/small/front/f/1/f1e2b69e-b06b-46a5-ac57-a6a180eeecc7.jpg?1547518428';\nconst talismanOfDominence = 'https://img.scryfall.com/cards/small/en/e01/90.jpg?1517813031';\nconst talismanOfProgress = 'https://img.scryfall.com/cards/small/en/td2/26.jpg?1517813031';\nconst oblivionStone = 'https://img.scryfall.com/cards/small/en/cm2/205.jpg?1534112917';\nconst mindSlaver = 'https://img.scryfall.com/cards/small/en/som/176.jpg?1517813031';\nconst academyRuins = 'https://img.scryfall.com/cards/small/en/mma/219.jpg?1517813031';\nconst gemStoneCaverns = 'https://img.scryfall.com/cards/small/en/tsp/274.jpg?1517813031';\nconst island = 'https://img.scryfall.com/cards/small/front/a/c/ac28037a-461b-4fb3-9feb-d3eb739da995.jpg?1551119362';\nconst tetonicEdge = 'https://img.scryfall.com/cards/small/en/c14/313.jpg?1530679235';\nconst tolariaWest = 'https://img.scryfall.com/cards/small/en/fut/173.jpg?1530718954';\nconst oboroPalaceInTheClouds = 'https://img.scryfall.com/cards/small/en/sok/164.jpg?1517813031';\nconst fieldOfRuin = 'https://img.scryfall.com/cards/small/en/xln/254.jpg?1527431443';\n\nexport const blueTron = [\n                            [walkingBalista, \n                            snapCaster,\n                            thoughtKnotSeer,\n                            thoughtKnotSeer,\n                            trinketMage,\n                            treasureMage,\n                            wormCoilEngine,\n                            sunderingTitan,],\n                            [ugin,],\n                            [condescend,\n                            condescend,\n                            condescend,\n                            condescend,\n                            repeal,\n                            repeal,\n                            cyclonicRift,\n                            remand,\n                            remand,\n                            remand,\n                            thirstForKnowledge,\n                            thirstForKnowledge,\n                            thirstForKnowledge,\n                            thirstForKnowledge,],\n                            [chaliceOfTheVoid,\n                            chaliceOfTheVoid,\n                            chaliceOfTheVoid,\n                            engineeredExplosives,\n                            expeditionMap,\n                            expeditionMap,\n                            expeditionMap,\n                            expeditionMap,\n                            talismanOfDominence,\n                            talismanOfProgress,\n                            oblivionStone,\n                            mindSlaver,\n                            mindSlaver,],\n                            [academyRuins,\n                            fieldOfRuin,\n                            gemStoneCaverns,\n                            island,\n                            island,\n                            island,\n                            island,\n                            island,\n                            island,\n                            oboroPalaceInTheClouds,\n                            tetonicEdge,\n                            tolariaWest,\n                            urzaMine, \n                            urzaMine, \n                            urzaMine, \n                            urzaMine, \n                            urzaPowerPlant, \n                            urzaPowerPlant, \n                            urzaPowerPlant, \n                            urzaPowerPlant, \n                            urzaTower,\n                            urzaTower,\n                            urzaTower,\n                            urzaTower,]\n                        ]","import { CardInfo } from '../common/types';\n\nexport const SEARCH = {\n  LOAD: 'SEARCH_LOAD_CARDS',\n  ERROR: 'SEARCH_ERROR'\n}\n\nexport const loadSearchCards = (cards: Array<CardInfo>) => {\n    return {\n      type: SEARCH.LOAD,\n      error: false,\n      cards\n    }\n  }\n\nexport const getCardSearchData = (url: string) => {\n    return (dispatch: any) => {\n      fetch(url)\n        .then(response => {\n            if (response.status === 200) {\n                return response.json();\n            } else if (response.status === 404) {\n                console.log(\"response\", response.status)\n                dispatch({type: SEARCH.ERROR})\n            }\n        })\n        .then((json) => {\n          if (json) {\n            var cards = json.data.filter((info: any) => {\n              return info.layout === \"normal\"\n            })\n            .map((info: any) => {\n                return {\n                  artist: info.artist,\n                  cmc: info.cmc,\n                  color_identity: info.color_identity,\n                  colors: info.colors,\n                  image_uris: info.image_uris,\n                  mana_cost: info.mana_cost,\n                  name: info.name,\n                  oracle_text: info.oracle_text,\n                  power: info.power,\n                  rarity: info.rarity,\n                  reserved: info.reserved,\n                  setName: info.setName,\n                  toughness: info.toughness,\n                  typeLine: info.type_line,\n                }\n            })\n            console.log(cards)\n            dispatch(loadSearchCards(cards));\n          }\n        });\n      }\n  }","import React from 'react';\n\ntype errorProp = {errorMessage: string};\n\nconst errorStyle = {\n    color: 'red',\n} as React.CSSProperties\n\nexport const Error = ({errorMessage}: errorProp) => {\n    return(<div style={errorStyle} >{errorMessage}</div>)\n}\n","import React, {  Dispatch } from 'react'\nimport { connect } from 'react-redux';\nimport { filteredSearchURL } from '../../common/URLs';\nimport { getCardSearchData } from '../../actions/SearchActions';\nimport './Search.css';\nimport { Error } from '../../components/Error/Error';\n\nconst manaSymbolStyle = {\n    maxWidth: \"15px\",\n    maxHeight: \"15px\",\n}\n\ntype SearchState = {\n    textbox: string;\n    filterColors: string;\n    cardType: string;\n}\n\ntype SearchProps = {\n    dispatch: Dispatch<any>;\n    error: boolean\n}\n\nconst mapStateToProps = ({searchDisplay}: {searchDisplay: {error: boolean}} ) => {\n    return {error: searchDisplay.error};\n}\n\nclass Search extends React.Component<SearchProps, SearchState> {\n    constructor(props: SearchProps) {\n        super(props);\n\n        this.state = {\n            textbox: \"\",\n            filterColors: \"\",\n            cardType: \"\",\n        }\n        this.getCards = this.getCards.bind(this);\n    }\n\n    getCards = (event: React.FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      var searchCardNameURL: string = filteredSearchURL + this.state.textbox;\n    \n      searchCardNameURL += (this.state.cardType) ? `+t:${this.state.cardType}` : \"\";\n\n      searchCardNameURL += (this.state.filterColors) ? `+c:${this.state.filterColors}` : \"\";\n\n      searchCardNameURL += \"&unique\";\n\n      this.props.dispatch(getCardSearchData(searchCardNameURL));\n    }\n\n    handleCheck = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let color = e.target.value;\n        let { filterColors } = this.state;\n        \n        if (filterColors.includes(color)) {\n            let newfilterColors = filterColors.replace(color, \"\");\n            this.setState({ filterColors: newfilterColors });\n        } else {\n            this.setState({ filterColors: filterColors.concat(e.target.value) });\n        }\n    }\n\n    onSearchTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ textbox: e.target.value });\n    }\n\n    handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        this.setState({ cardType: e.target.value });\n    }\n\n    render() {\n      return (\n        <form onSubmit={this.getCards}>\n          <input className=\"field\" type=\"text\" onChange={this.onSearchTextChange}/>\n          <button className=\"submitbutton\" type=\"submit\"> submit </button>\n          <br/>\n          \n          {this.props.error && <Error errorMessage=\"no results, try again\"/>}\n          \n          <input type=\"checkbox\" onChange={this.handleCheck} value=\"w\"></input> \n          <img src=\"https://gamepedia.cursecdn.com/mtgsalvation_gamepedia/8/8e/W.svg\" alt=\"white_mana\" style={manaSymbolStyle}/> &nbsp;\n\n          <input type=\"checkbox\" onChange={this.handleCheck} value=\"u\"></input>\n          <img src=\"https://gamepedia.cursecdn.com/mtgsalvation_gamepedia/9/9f/U.svg\" alt=\"blue_mana\" style={manaSymbolStyle}/> &nbsp;\n          \n          <input type=\"checkbox\" onChange={this.handleCheck} value=\"b\"></input>\n          <img src=\"https://gamepedia.cursecdn.com/mtgsalvation_gamepedia/2/2f/B.svg\" alt=\"black_mana\" style={manaSymbolStyle}/> &nbsp;\n          \n          <input type=\"checkbox\" onChange={this.handleCheck} value=\"r\"></input>\n          <img src=\"https://gamepedia.cursecdn.com/mtgsalvation_gamepedia/8/87/R.svg\" alt=\"red_mana\" style={manaSymbolStyle}/> &nbsp;\n          \n          <input type=\"checkbox\" onChange={this.handleCheck} value=\"g\"></input>\n          <img src=\"https://gamepedia.cursecdn.com/mtgsalvation_gamepedia/8/88/G.svg\" alt=\"green_mana\" style={manaSymbolStyle}/> &nbsp;\n          <select onChange={this.handleSelect}>\n              <option value=\"\">Choose A Card Type</option>\n              <option value=\"artifact\">Artifact</option>\n              <option value=\"creature\">Creature</option>\n              <option value=\"enchantment\">Enchantment</option>\n              <option value=\"instant\">Instant</option>\n              <option value=\"sorcery\">Sorcery</option>\n              <option value=\"planeswalker\">Planeswalker</option>\n              <option value=\"land\">Land</option>\n          </select>\n\n        </form>\n      )\n    }\n}\n\nexport default connect(mapStateToProps)(Search);","import React from 'react'\nimport './graphs.css'\n\ntype LineProps = {\n    top: number,\n    key: number\n}\n\nconst Line = ({ top }: LineProps) => \n    <div className=\"line\" style={{ top: `${top}%` }} />\n\nexport default Line","import React from 'react'\n\ninterface CMCMetric {\n    cmc: number,\n    count: number\n}\n\ntype XaxisProps = {\n    manacurve: Array<CMCMetric>\n}\n\nconst Xaxis = ({ manacurve }: XaxisProps) => {\n  Array(11).fill(null);\n\n  return (\n    <div className=\"xaxis\">\n      {\n        manacurve.map((cost) => (\n          <div className=\"label\" key={cost.cmc}>\n            {cost.cmc}\n          </div>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Xaxis","import React from 'react'\n\ntype BarProps = {\n    percent: number\n}\n\nconst Bar = (props: BarProps) => \n    <div className=\"bar\" style={{ height: `${props.percent}%`}} />\n\nexport default Bar","import React from 'react'\nimport './graphs.css'\nimport Line from './Line'\nimport Xaxis from './Xaxis'\nimport Bar from './Bar'\n\ninterface CMCMetric {\n    cmc: number,\n    count: number\n}\n\ntype GraphProps = {\n    metrics: Array<CMCMetric>\n}\n\nexport default function Graph({metrics}: GraphProps) {\n    // this sets up the horizontal lines\n    const renderLines= () => {\n        return Array(10).fill(null).map((el, i) => (\n            <Line\n                top={i * 10}\n                key={i}\n            />\n        ))\n    }\n\n    // sets up the vertical bars\n    const renderBars = () => {\n        let sumOfAll = metrics.reduce((acc: number, cost: CMCMetric) => {\n            return acc + cost.count;\n        }, 0);\n\n        return metrics.map((cost) => {\n            const percent = (cost.count / sumOfAll) * 100;\n            return (\n                <Bar\n                    percent={percent}\n                    key={cost.cmc}\n                />\n            )\n        })\n    }\n\n    return (\n        <div className=\"graph-wrapper\">\n            <div className=\"graph\">\n                <div className=\"bar-lines-container\">\n                    {renderLines()}\n                    {renderBars()}\n                </div>\n                <Xaxis manacurve={metrics} />\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport Graph from './Graph'\nimport { CardInfo } from '../../common/types';\n\nconst metricsStyle = {\n    border: 'solid black thin',\n    width: '35vw',\n    height: '30vh',\n    display: 'inline-block'\n}\n\ninterface CardCount {\n    [index: string]: number\n}\n\ntype MetricsProps = {\n    main: Array<CardInfo>,\n    counts: CardCount\n}\n\ninterface CMCMetric {\n    cmc: number,\n    count: number\n}\n\nfunction Metrics ({ main, counts }: MetricsProps) {\n\n    const check = (main: Array<CardInfo>, i: number, graphInput: Array<CMCMetric>): boolean => {\n        for (let j = 0; j < graphInput.length; j++) {\n            if (main[i].cmc === graphInput[j].cmc) {\n                return true\n            }\n        }\n        return false\n    }\n\n    const metrics = (main: Array<CardInfo>, counts: CardCount): Array<CMCMetric>=> {\n        var graphInput: Array<CMCMetric> = [];\n\n        for (let i = 0; i < main.length; i++) {\n            if (!check(main, i, graphInput)) {\n                var newObj = {\n                    cmc: main[i].cmc,\n                    count: counts[main[i].name]\n                }\n                graphInput.push(newObj)\n            }\n\n            else {\n                for (let k = 0; k < graphInput.length; k++) {\n                    if (main[i].cmc === graphInput[k].cmc) {\n                        graphInput[k].count += counts[main[i].name]\n                    }\n                }\n            }\n        }\n        return graphInput.sort((a, b) => a.cmc - b.cmc);\n    }\n\n    return (\n        <div style={metricsStyle}>\n            <Graph metrics={metrics(main, counts)} />\n        </div>\n    )\n}\n\nexport default Metrics","import React from 'react'\n\nexport default function DeckTypeSelection() {\n    return (\n        <select>\n            <option value=\"standard\">Standard</option>\n            <option value=\"modern\">Modern</option>\n            <option value=\"legacy\">Legacy</option>\n            <option value=\"vintage\">Vintage</option>\n            <option value=\"commander\">Commander</option>\n            <option value=\"other\">Other</option>\n        </select>\n    )\n} \n","import React from 'react';\nimport { CardInfo } from '../../common/types';\n\ntype DeckListEntryProps = {\n    index: number,\n    card: CardInfo,\n    count: number,\n    getCardInfo(card: CardInfo, name: string): void   \n}\n\nexport default function DeckListEntry ({index, card, count, getCardInfo}: DeckListEntryProps) {\n    const handleOnClick = (e: any) => {\n        getCardInfo(card, e.target.name);\n    }\n\n    return (\n        <div className=\"flex alignment\" key={index}> \n            <div className=\"flex count\">\n                {count}x \n                <button onClick={handleOnClick} name={'increment'}>+</button>\n            </div>\n            <div className=\"flex name\">\n                {card.name} \n                <button onClick={handleOnClick} name={'decrement'}>-</button>\n                <button onClick={handleOnClick} name={'maybe'}>maybe</button>\n            </div>        \n        </div>\n    )\n}","import React from 'react'\nimport DeckListEntry from './DeckListEntry'\nimport { CardInfo } from '../../common/types';\n\ninterface CardCount {\n    [index: string]: number\n}\n\ntype DeckListEntriesProps = {\n    data: Array<CardInfo>,\n    type: string,\n    counts: CardCount,\n    getCardInfo(card: CardInfo, name: string): void,\n}\n\nexport default function DeckListEntries({data, type, counts, getCardInfo}: DeckListEntriesProps) {\n    let entries = data.map((entry: CardInfo, index: number)=> {\n        return <DeckListEntry index={index} key={index} card={entry} getCardInfo={getCardInfo} count={counts[entry.name]} />\n    }) \n    return (entries.length) ? (\n        <>\n            <div className=\"type_padding\">{type}</div>\n            <div>\n                {entries}\n            </div>\n        </>\n    ) : null;\n}\n","import { CardInfo } from '../common/types';\nimport { Dispatch, Reducer } from 'react';\nimport { AnyAction, Middleware } from 'redux';\n\n\nexport const CARD_COUNT = {\n    INCREMENT: 'CARD_COUNT_INCREMENT',\n    ADD: 'CARD_COUNT_ADD',\n    DECREMENT: 'CARD_COUNT_DECREMENT',\n    REMOVE: 'CARD_COUNT_REMOVE'\n}\n\nexport const DECKLIST = {\n    ADD: 'DECKLIST_ADD',\n    REMOVE: 'DECKLIST_REMOVE',\n}\n\nexport const MAYBEBOARD = {\n    ADD: \"MAYBEBOARD_ADD\",\n    REMOVE: \"MAYBEBOARD_REMOVE\",\n}\n\n/*\n    // Helper to extract inferred return type of a function\n    type _ExtractReturn<B, F: (...args: any[]) => B> = B;\n    type ExtractReturn<F> = _ExtractReturn<*, F>;\n    // only need to provide types for arguments in action-creators\n    // return type will be inferred\n    function setAge(age: number) {\n        return { type: AGE, payload: age }\n    }\n    function setName(name: number) {\n        return { type: NAME, payload: name }\n    }\n    // Create a union type containing all the return types of\n    // of your chosen action-creators. \n    // The result can be used as a tagged union \n    // that allows Flow to narrow the payload type \n    // based on 'type' property\n    type Actions =\n        ExtractReturn<typeof setAge> |\n        ExtractReturn<typeof setName>\n*/ \n\nexport const addToDeckList = (cardInfo: CardInfo) => {\n    return (dispatch: Dispatch<AnyAction>, getState: any) => {\n        const state = getState();\n        if (state.deckList.main.includes(cardInfo)) {\n            dispatch({\n                type: CARD_COUNT.INCREMENT, \n                name: cardInfo.name\n            })\n        } else {\n            dispatch({\n                type: DECKLIST.ADD, \n                card: cardInfo\n            });\n            dispatch({\n                type: CARD_COUNT.ADD, \n                name: cardInfo.name\n            })\n        }\n    }\n}\n\nexport const removeFromDeckList = (cardInfo: CardInfo) => {\n    return (dispatch: Dispatch<AnyAction>) => {\n            dispatch({\n                type: DECKLIST.REMOVE, \n                card: cardInfo\n             });\n            dispatch({\n                type: CARD_COUNT.REMOVE, \n                name: cardInfo.name\n            })\n    }\n}\n\nexport const moveToMaybe = (cardInfo: CardInfo) => {\n    return (dispatch: Dispatch<Reducer<any, AnyAction>>) => {\n        dispatch(addToMaybe(cardInfo))\n        dispatch(removeFromDeckList(cardInfo))\n    }\n}\n\n// card count actions\nexport const incrementCardCount = (cardInfo: CardInfo) => {\n    return {\n        type: CARD_COUNT.INCREMENT, \n        name: cardInfo.name\n    }\n}\n\nexport const decrementCardCount = (cardInfo: CardInfo) => {\n    return (dispatch: any, getState: any) => {   \n        const state = getState();\n        if (state.cardCount.counts[cardInfo.name] === 1) {\n            dispatch(removeFromDeckList(cardInfo));\n        } else {\n            dispatch({type: CARD_COUNT.DECREMENT, name: cardInfo.name});\n        }\n    }\n}\n\nexport const addToMaybe = (cardInfo: CardInfo) => {\n    return (dispatch: Dispatch<AnyAction>, getState: any) => {\n        const state = getState();\n        if (!state.maybeBoard.cards.includes(cardInfo)) {\n            dispatch({type: MAYBEBOARD.ADD, card: cardInfo});\n        }\n    }\n}\n\nexport const deleteFromMaybe = (cardInfo: CardInfo) => {\n    return {\n        type: MAYBEBOARD.REMOVE,\n        card: cardInfo\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport Metrics from '../../components/Metrics';\nimport DeckTypeSelection from '../DeckList/DeckTypeSelection';\nimport DeckListEntries from '../DeckList/DeckListEntries';\nimport {incrementCardCount, decrementCardCount, moveToMaybe} from '../../actions/CardActions';\nimport './DeckList.css'\n\nexport const mapStateToProps = (state) => {\n    return {\n        main: state.deckList.main,\n        counts: state.cardCount.counts\n    }\n}\n\nexport const organizeCards = (cards) => {\n    return cards.reduce((sortedByTypes, cardData) => {\n        if (cardData.typeLine.toLowerCase().includes('creature')) {\n            return {...sortedByTypes, creatures: [...sortedByTypes.creatures, cardData]}\n        } else if (cardData.typeLine.toLowerCase().includes('land')) {\n            return {...sortedByTypes, lands: [...sortedByTypes.lands, cardData]} \n        } else if (cardData.typeLine.toLowerCase().includes('enchantment')) {\n            return {...sortedByTypes, enchantments: [...sortedByTypes.enchantments, cardData]}\n        } else if (cardData.typeLine.toLowerCase().includes('artifact')) {\n            return {...sortedByTypes, artifacts: [...sortedByTypes.artifacts, cardData]}\n        } else if (cardData.typeLine.toLowerCase().includes('planeswalker')) {\n            return {...sortedByTypes, planeswalkers: [...sortedByTypes.planeswalkers, cardData]}\n        } else if (cardData.typeLine.toLowerCase().includes('sorcery')) {\n            return {...sortedByTypes, spells: [...sortedByTypes.spells, cardData]}\n        } else if (cardData.typeLine.toLowerCase().includes('instant')) {\n            return {...sortedByTypes, spells: [...sortedByTypes.spells, cardData]}\n        } else {\n            return {...sortedByTypes, other: [...sortedByTypes.other, cardData]}\n        }\n    }, {\n        artifacts: [],\n        enchantments: [],\n        spells: [],\n        planeswalkers: [],\n        lands: [],\n        creatures: [],\n        other: []\n    })\n}\n\nconst decklistStyle = {\n    border: 'solid black thin',\n    width: '35vw',\n    height: '50vh',\n    padding: '15px',\n    overflow: 'scroll',\n}\n\n//container\nexport class DeckList extends React.Component {\n    constructor() {\n        super();\n        this.getCardInfo = this.getCardInfo.bind(this);\n    }\n\n    getCardInfo(cardInfo, buttonType) {\n        if (buttonType === 'increment') {\n            this.props.dispatch(incrementCardCount(cardInfo));\n        } else if (buttonType === 'decrement') {\n            this.props.dispatch(decrementCardCount(cardInfo));\n        } else if (buttonType === 'maybe') {\n            this.props.dispatch(moveToMaybe(cardInfo));\n        }\n    }\n\n    render() {\n        // expecting deck lists sort data here?\n        const sortedByTypes = organizeCards(this.props.main)\n\n        return (\n            <div>\n                <div style={decklistStyle}>\n                    <div><b> DECK TITLE </b></div>\n                        <DeckTypeSelection />\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Creatures\"} data={sortedByTypes.creatures} counts={this.props.counts}/>\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Spells\"} data={sortedByTypes.spells} counts={this.props.counts} />\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Enchantments\"} data={sortedByTypes.enchantments} counts={this.props.counts}/>\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Artifacts\"} data={sortedByTypes.artifacts} counts={this.props.counts}/>\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Planeswalkers\"} data={sortedByTypes.planeswalkers} counts={this.props.counts}/>\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Lands\"} data={sortedByTypes.lands} counts={this.props.counts}/>\n                        <DeckListEntries getCardInfo={this.getCardInfo} type={\"Other *debugging*\"} data={sortedByTypes.other} counts={this.props.counts}/>\n                </div>\n                <Metrics main={this.props.main} counts={this.props.counts}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(DeckList);","import React, { Component } from 'react';\nimport './Card.css';\nimport { CardInfo } from '../../common/types';\n\nexport type CardProps = {\n    info: CardInfo,\n    buttonDisplay: string,\n    getCardInfo(info: CardInfo, name: string): void\n}\n\nexport default class Card extends Component<CardProps> {\n    constructor(props: CardProps) {\n      super(props);\n\n      this.handleOnCLick = this.handleOnCLick.bind(this)\n    }\n\n    handleOnCLick(e: any) {\n        this.props.getCardInfo(this.props.info, e.target.name);\n    }\n    \n    render() {\n        let {info} = this.props; \n\n        return (\n            <div className=\"container\">\n                <img draggable={false}\n                    src={info.image_uris.small}\n                    alt={info.name}\n                />\n                <button className=\"btn\" name=\"add\" onClick={this.handleOnCLick}>Add To Decklist</button>\n                <button className=\"btn2\" name=\"other\" onClick={this.handleOnCLick}>{this.props.buttonDisplay}</button>\n            </div>\n        )\n    }   \n  }\n\n  ","import React from 'react';\nimport Card from '../../components/Card';\nimport { connect } from 'react-redux';\nimport {addToDeckList, addToMaybe} from '../../actions/CardActions';\n\nexport const mapStateToProps = ({searchDisplay, deckList}) => {\n    return {\n        cards: searchDisplay.cards,\n        counts: deckList.cardCount\n    };\n}\n\nconst cardBoxStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    border: 'solid black thin',\n    width: '63vw',\n    height: '50vh',\n    overflow: 'scroll',\n} as React.CSSProperties\n\nexport const SearchCardDisplay = (props) => {\n    const getCardInfo = (cardInfo, buttonType) => {\n        if (buttonType === \"add\") {\n            props.dispatch(addToDeckList(cardInfo));\n        } else if (buttonType === \"other\") {\n            props.dispatch(addToMaybe(cardInfo));\n        }\n    };\n\n    const cards = props.cards.map((info, index) => {\n        return <Card info={info} getCardInfo={getCardInfo} buttonDisplay={'Add to MaybeBoard'} key={index} />;\n    });\n\n    return (\n        <div style={cardBoxStyle}>\n            {cards}\n        </div>\n    );\n}\n\nexport default connect(mapStateToProps)(SearchCardDisplay)","import React from 'react';\nimport Card from '../../components/Card';\nimport { connect } from 'react-redux';\nimport {addToDeckList, deleteFromMaybe} from '../../actions/CardActions';\n\nexport const mapStateToProps = (state) => {\n    return {\n        cards: state.maybeBoard.cards\n    }\n}\n\nconst maybeBoardStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    border: 'solid black thin',\n    width: '63vw',\n    height: '28vh',\n    overflow: 'scroll',\n}\n\nexport class MaybeBoardDisplay extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.getCardInfo = this.getCardInfo.bind(this);\n    }\n\n    getCardInfo(cardInfo, buttonType) {\n        if (buttonType === \"add\") {\n            this.props.dispatch(addToDeckList(cardInfo));\n        } else if (buttonType === \"other\") {\n            this.props.dispatch(deleteFromMaybe(cardInfo));\n        }\n    }\n\n    render() {\n        const cards = this.props.cards.map((info, index) => {\n            return <Card info={info} key={index} getCardInfo={this.getCardInfo} buttonDisplay={'Delete'} />\n        })\n\n        return(\n            <div style={maybeBoardStyle}>\n                {cards}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(MaybeBoardDisplay)","import React from 'react';\nimport Search from '../../containers/Search';\nimport DeckList from '../../containers/DeckList/DeckList';\nimport SearchCardDisplay from '../../containers/SearchCardDisplay/SearchCardDisplay';\nimport MaybeBoardDisplay from '../../containers/MaybeBoardDisplay/MaybeBoardDisplay';\nimport './DeckBuilder.css';\n\nexport default class DeckBuilder extends React.Component {\n  render() {\n    return (\n      <div>\n        <Search />\n        <div className=\"flexboxes\">\n          <div className=\"column\">\n          <SearchCardDisplay />\n          <MaybeBoardDisplay />\n          </div>\n          <div className=\"column\">\n            <DeckList />\n          </div>\n        </div>\n        <img className=\"background\" src=\"https://cdn.arstechnica.net/wp-content/uploads/2016/01/159984_CN-980x597.jpg\" alt=\"default\"/>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Navbar from '../../components/Navbar'\nimport NoMatch from '../../components/NoMatch';\nimport DeckBuilder from '../../containers/DeckBuilder';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <BrowserRouter basename=\"/deck-builder-web/\">\n            <Switch>\n                <Route path=\"/home\" exact component={DeckBuilder} />\n                <Route exact path=\"/\">\n                    <Redirect to=\"/home\" />\n                </Route>\n                <Route component={NoMatch} />\n            </Switch>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SEARCH } from '../actions/SearchActions';\n\nconst initialState = { cards: [], error: false };\n\nexport default function searchDisplay(state=initialState, action) {\n    switch(action.type) {\n        case SEARCH.LOAD:\n            return Object.assign({}, state, {\n                cards: action.cards, error: false\n            });\n        case SEARCH.ERROR:\n            return Object.assign({}, state, {error: true});\n        default:\n            return state;\n    }\n}\n","import { DECKLIST } from '../actions/CardActions';\nconst initialState = { main: [] };\n\nexport default function deckList(state=initialState, action){\n    switch(action.type) {\n        case DECKLIST.ADD:\n            return Object.assign({}, state, {\n                main: [...state.main, action.card]\n            })\n        case DECKLIST.REMOVE:\n            return Object.assign({}, state, {\n                main: state.main.filter((card) => {\n                    return !Object.is(card, action.card)\n                })\n            })\n        default:\n            return state;\n    }\n}","import { MAYBEBOARD } from '../actions/CardActions';\nconst initialState = { cards: [] };\n\nexport default function maybeBoard(state=initialState, action) {\n    switch(action.type) {\n        case MAYBEBOARD.ADD:\n            return Object.assign({}, state, {\n                cards: [...state.cards, action.card]\n            })\n        case MAYBEBOARD.REMOVE:\n            return Object.assign({}, state, {\n                cards: state.cards.filter((card) => {\n                    return !Object.is(card, action.card);\n                })\n            })\n        default:\n            return state;\n    }\n}","import { CARD_COUNT } from '../actions/CardActions'\nconst initialState = { counts: {} };\n\nexport default function cardCount(state=initialState, action) {\n    switch(action.type) {\n        case CARD_COUNT.ADD:\n            return Object.assign({}, state, {\n                counts: Object.assign({}, state.counts, {\n                    [action.name]: 1\n                })\n            });\n        case CARD_COUNT.INCREMENT:\n            return Object.assign({}, state, {\n                counts: Object.assign({}, state.counts, {\n                    [action.name]: (state.counts[action.name]) ? state.counts[action.name] + 1 : 1\n                })\n        });\n        case CARD_COUNT.DECREMENT:\n            return Object.assign({}, state, {\n                counts: Object.assign({}, state.counts, {\n                    [action.name]: state.counts[action.name] - 1\n                })\n            });\n        case CARD_COUNT.REMOVE:\n            return Object.assign({}, state, {\n                counts: Object.keys(state.counts).reduce((result, name) => {\n                    if (name !== action.name) {\n                        result[name] = state.counts[name];\n                    }\n                    return result\n                }, {})\n            });\n        default: \n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport searchDisplay from '../reducers/SearchDisplayReducer';\nimport deckList from '../reducers/DeckListReducer';\nimport maybeBoard from '../reducers/MaybeBoardReducer';\nimport cardCount from '../reducers/CardCountReducer';\n\nexport default combineReducers({\n    searchDisplay,\n    deckList,\n    cardCount,\n    maybeBoard,\n});\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\nimport rootReducer from './reducers'\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}